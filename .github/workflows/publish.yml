on:
  push:
    tags:
    - '*'

permissions:
  contents: write

jobs:
  release:
    name: release ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - target: x86_64-pc-windows-msvc
            name: calcagebra.exe
            os: windows-latest
          - target: x86_64-unknown-linux-musl
            name: calcagebra
            os: ubuntu-latest
          - target: x86_64-apple-darwin
            name: calcagebra-darwin
            os: macos-latest
          - target: aarch64-apple-darwin
            name: calcagebra-aarch64-darwin
            os: macos-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions-rs/toolchain@v1
        with:
            toolchain: stable
            target: ${{ matrix.target }}
            default: true
            override: true
            components: rustfmt, clippy
      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release --target ${{ matrix.target }}
      - shell: bash
        run: |
          PROJ=$(cargo metadata --no-deps --format-version 1 | jq -r '.packages[].targets[] | select( .kind | map(. == "bin") | any ) | .name')
          FILEPATH=target/${{ matrix.target }}/release/$PROJ
          if [[ -f $FILEPATH ]]; then
            cp $FILEPATH $(echo ${{ matrix.name }})
          else
            cp target/release/$PROJ $(echo ${{ matrix.name }})
          fi
      - uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: ${{ matrix.name }}
